import subprocess
import os
from fn_file import *

def my_log(res,success_mess, error_mess):
    if res.returncode == 0:
        print(success_mess)
    else:
        print(error_mess)
        
def checkNullAndExitProgram(val):
    if not val:
        print("Null Value")
        exit()
        
def overwrite_resolv_conf(domain, dns_server_ip):
    content = f"""# Generated by NetworkManager
search {domain}
nameserver {dns_server_ip}
nameserver 8.8.8.8
nameserver 8.8.4.4
"""
    write_content_to_file('/etc/resolv.conf',content)
    

def generate_forward_zone(domain,ip_address):
    return f""" 
zone "{domain}" IN {{
    type master;
    file "forward.{domain}";
    allow-update {{ none; }};
}};
"""

def create_zone_file(filename, content):
    path = f"/var/named/{filename}"
    write_content_to_file(path, content)
    
# stop firewall
print('Stop firewall ...')
os.system('sudo systemctl stop firewalld')
print('stop firewall successfull')

# install bind
allow_install = input("Do you want to install bind for dns ? (y/n)")
if allow_install == 'y':
    os.system('yum install bind* -y')
    os.system('clear')
    print('Install successfull')
else:
    print('You dont need bind for dns !')

# change hostname
hostname = input("Enter hostname if you need: ")
if not hostname:
    print('No change host name')
else:
    command = ["hostnamectl", "set-hostname", hostname]
    result = subprocess.run(command, capture_output=True, text=True)
    my_log(res=result, success_mess='sucessfull change !', error_mess="Have error !")

ip_address = input("Enter your ip: ")
domain_name = input("Enter domain name: ")
checkNullAndExitProgram(ip_address)
checkNullAndExitProgram(domain_name)

# change name server file /etc/resolv.conf
overwrite_resolv_conf(domain_name, ip_address)

content_for_named_file = read_file_to_array('/etc/named.conf')
index_insert = len(content_for_named_file) - 2;
content_for_named_file[index_insert:index_insert] = [generate_forward_zone(domain_name,ip_address)]
write_content_to_file('/etc/named.conf', content_for_named_file)

# create file zone and create content for that file
forward_zone_content = f"""
$TTL 86400
@   IN  SOA     ns1.{domain_name}. root.{domain_name}. (
                2023111301 ; Serial
                3600       ; Refresh
                1800       ; Retry
                604800     ; Expire
                86400 )    ; Minimum TTL

    IN  NS      ns1.{domain_name}.
@   IN  A       {ip_address}
ns1 IN  A       {ip_address}
"""

create_zone_file(f"forward.{domain_name}", forward_zone_content)

# check zone configuration
main_network = '.'.join(ip_address.split('.')[:3])
os.system(f'named-checkzone {domain_name} /var/named/forward.{domain_name}')

# restart dns service
print('restart dns service...')
os.system('systemctl enable named')
os.system('systemctl restart named')